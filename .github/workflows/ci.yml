name: CI

on:
  push:
    branches:
      - main

jobs:
  integration:
    name: Node ${{ matrix.node_version }} - On ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node_version: [ 18 ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Deps
        run: |
          npm install

      - name: Format
        run: |
          npm run format 
      - name: Lint
        run: |
          npm run lint
          npm run format:check

      - name: Test
        run: |
          npm run test:ci

      - name: Build
        run: |
          npm run build
          cp package.json dist/
          
      - name: run build
        run: npm run build 
      
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: result
          path: dist/   
        
  infra:
    name: provision aws infrastructure using terraform 
    runs-on: ubuntu-latest
    needs: integration
    outputs: 
      output1: ${{ steps.ip_address.outputs.ip }}
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: "us-east-1"
     
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        run: terraform -chdir=terraform apply --auto-approve
      
      - name: Terraform Destroy
        run: |
          terraform init
          terraform -chdir=terraform destroy -auto-approve  
       
    

  
  
